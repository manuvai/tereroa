openapi: 3.0.0
info:
  title: Tereroa API
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /vehicles/{id}/reservations:
    get:
      tags:
        - Gestion des véhicules
      summary: Consultation des réservations concernant un véhicule
      operationId: getVehicleReservations
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReservationDto'

  /vehicles/{id}:
    get:
      tags:
        - Gestion des véhicules
      summary: Consultation d'un véhicule
      operationId: getVehicle
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleDto'
        404:
          description: Not Found
        500:
          description: Internal Error
  /vehicles:
    get:
      tags:
        - Gestion des véhicules
      summary: Consultation de la liste des véhicules
      operationId: getAllVehicles
      parameters:
        - name: tripStartDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: tripEndDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VehicleDto'
        500:
          description: Internal Error

  /users:
    get:
      summary: Consultation de la liste des utilisateurs
      operationId: getAllUsers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
  /users/{id}:
    get:
      tags:
        - Gestion des utilisateurs
      summary: Consultation d'un utilisateur
      operationId: getUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"
        404:
          description: Not Found
        500:
          description: Internal Error
  /users/{id}/reservations:
    get:
      tags:
        - Gestion des utilisateurs
      summary: Consultation des réservations d'un utilisateur
      operationId: getUserReservations
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReservationDto"
        404:
          description: Not Found
        500:
          description: Internal Error

components:
  schemas:
    VehicleDto:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        pricePerDay:
          type: number
        owner:
          $ref: '#/components/schemas/UserDto'

    UserDto:
      type: object
      properties:
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email

    ReservationDto:
      type: object
      properties:
        id:
          type: integer
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        customer:
          $ref: '#/components/schemas/UserDto'
        vehicle:
          $ref: '#/components/schemas/VehicleDto'
